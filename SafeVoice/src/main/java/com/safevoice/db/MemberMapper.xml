<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- SQL구문 작성하는 공간 -->
<mapper namespace="com.safevoice.db.MemberDAO">
	
	 <insert id="signIn" parameterType = "membervo">
	 	INSERT INTO MEMBERS
	 	VALUES(#{id},#{email},#{pw},#{name},#{birthdate},#{phone},#{postcode},#{address},#{detailAddress},#{gender},#{memType})
	 </insert>
	 
	 <!-- 로그인 할 때 입력하는 정보 중 세션에 집어넣어야 할 정보가 있다.
	 로그인 SQL 에서는 그렇게 세션에 입력해야 할 정보를 입력해야 한다. -->
	 <select id="login" parameterType = "membervo" resultType = "membervo">
	 	SELECT MEMBER_ID, EMAIL, NAME, PHONE
	 	FROM MEMBERS
	 	WHERE MEMBER_ID = #{id}
	 	AND PW = #{pw}
	 </select>

	<select id="idDuplicateCheck" parameterType = "String">
		SELECT COUNT(*)
		FROM MEMBERS
		WHERE MEMBER_ID = #{id}
	</select>

	<update id="updateMember" parameterType="membervo">
    UPDATE MEMBERS
    <set>
        <if test="email != null and email != ''">
            EMAIL = #{email},
        </if>
        <if test="phone != null and phone != ''">
            PHONE = #{phone},
        </if>
        <if test="address != null and address != ''">
            ADDRESS = #{address},
        </if>
        <if test="pw != null and pw != ''">
            PW = #{pw},
        </if>
    </set>
    WHERE MEMBER_ID = #{id}
</update>

	<select id="checkMemberByIdAndEmail" parameterType="membervo" resultType="int">
   		SELECT *
    	FROM   member
    	WHERE  member_id = #{member_id}
      		   AND email = #{email}
	</select>


	<update id="updatdFamilyCd" parameterType = "membervo">
		UPDATE MEMBERS AS M1
		JOIN MEMBERS AS M2 ON M2.MEMBER_ID = #{childId}
			SET M1.FAMILY_CD = CASE
				WHEN M1.FAMILY_CD IS NULL AND M2.FAMILY_CD IS NULL
					THEN UUID()
				WHEN M1.FAMILY_CD IS NULL AND M2.FAMILY_CD IS NOT NULL
					THEN M2.FAMILY_CD
				ELSE M1.FAMILY_CD
				END
		WHERE M1.MEMBER_ID = #{id}
		UPDATE MEMBERS AS M1
		JOIN MEMBERS AS M2 ON M2.MEMBER_ID = #{id}
			SET M1.FAMILY_CD = CASE
				WHEN M1.FAMILY_CD IS NULL AND M2.FAMILY_CD IS NULL
					THEN UUID()
				WHEN M1.FAMILY_CD IS NULL AND M2.FAMILY_CD IS NOT NULL
					THEN M2.FAMILY_CD
				ELSE M1.FAMILY_CD
				END
		WHERE M1.MEMBER_ID = #{childId}
	</update>
	
	<delete id="signOut" parameterType = "membervo">
		DELETE *
		FROM MEMBERS
		WHERE MEMBER_ID = #{id} 
		AND PW = #{pw}
	</delete>
	
	<select id="findMember" parameterType = "membervo"> 
	 	SELECT *
	 	FROM MEMBERS
	 	WHERE MEMBER_ID = #{id}
	</select>
	
	<update id="updatePw" parameterType = "membervo">
		UPDATE MEMBERS
		SET PW = #{pw}
		WHERE MEMBER_ID = #{id}
		AND PHONE = #{phone}
	</update>
</mapper>